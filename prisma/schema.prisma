// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  boxes     Box[]    @relation("UserBoxes")
  permissions BoxPermission[]
  createdAt DateTime @default(now())
}

model Box {
  id        Int       @id @default(autoincrement())
  title     String
  images    Image[]
  ownerId   Int
  owner     User      @relation("UserBoxes", fields: [ownerId], references: [id])
  permissions BoxPermission[]
  createdAt DateTime  @default(now())
}

model Image {
  id      Int      @id @default(autoincrement())
  url     String
  boxId   Int
  box     Box      @relation(fields: [boxId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

model BoxPermission {
  id          Int    @id @default(autoincrement())
  boxId       Int
  userId      Int
  canUpload   Boolean @default(false)
  canView     Boolean @default(false)
  box         Box     @relation(fields: [boxId], references: [id], onDelete: Cascade)
  user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([boxId, userId])  // Ensure a unique combination of box and user
}
